<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="fecMain">

	<typeAlias  alias="egovMap"   type="egovframework.rte.psl.dataaccess.util.EgovMap"  />
    <typeAlias  alias="fecMainVO"  type="egovframework.com.sdtic.fecrs.service.fecMainVO" />
    <typeAlias  alias="FecSearchVO"  type="egovframework.com.sdtic.fecrs.service.FecSearchVO" />
    <typeAlias  alias="FecMDTOperVO"  type="egovframework.com.sdtic.fecrs.service.FecMDTOperVO" />
	<typeAlias  alias="FecMainMapVO"  type="egovframework.com.sdtic.fecrs.service.FecMainMapVO" />
	<typeAlias  alias="FecTunnelDetailVO"  type="egovframework.com.sdtic.fecrs.service.FecTunnelDetailVO" />
	<typeAlias  alias="FecElctyFcltsVO"  type="egovframework.com.sdtic.fecrs.service.FecElctyFcltsVO" />
	<typeAlias  alias="FecPltwtrProcessVO"  type="egovframework.com.sdtic.fecrs.service.FecPltwtrProcessVO" />
	<typeAlias  alias="FecElctyTunnelVO"  type="egovframework.com.sdtic.fecrs.service.FecElctyTunnelVO" />
	<typeAlias  alias="FecElctyTollgateVO"  type="egovframework.com.sdtic.fecrs.service.FecElctyTollgateVO" />
	<typeAlias  alias="FecElctyLampVO"  type="egovframework.com.sdtic.fecrs.service.FecElctyLampVO" />
	<typeAlias  alias="FecSptMapVO"  type="egovframework.com.sdtic.fecrs.service.FecSptMapVO" />
	<typeAlias  alias="fecEventVO"  type="egovframework.com.sdtic.fecrs.service.fecEventVO" />
	<typeAlias  alias="FecSlopeVO"  type="egovframework.com.sdtic.fecrs.service.FecSlopeVO" />

    <select id="fecMainDAO.fecMainCodeListAjax" parameterClass="fecMainVO" resultClass="fecMainVO">
        /* 공통코드 리스트 조회 */
        SELECT
             CODE_GRP_ID     /* 코드그룹        */
            ,CODE_ID         /* 코드아이디      */
            ,CODE_NAME       /* 코드이름        */
            ,REGIST_DATE     /* 등록일자        */
            ,REGIST_ID       /* 등록자아이디    */
            ,UPDT_DATE       /* 수정일자        */
            ,UPDT_ID         /* 수정자아이디    */
            ,USE_AT          /* 사용여부        */
        FROM INC_CODE        /* 공통코드 테이블 */
    </select>
    
    <select id="FecMainmapDAO.fecMainmapLv1Ajax" parameterClass="FecSearchVO" resultClass="FecMainMapVO">  
	    select  dept_code as deptCode, dept_nm as deptNm , fclty_code as fcltyCode,  fclty_name as fcltyName, trobl , lon, lat
		from fec_fclty_map
		where trobl = 1
		and fclty_code = #facCode# 
    </select> 
    
    <select id="FecTunnelDetailDAO.fecTunnelDetailLv2Ajax" parameterClass="FecSearchVO" resultClass="FecTunnelDetailVO">  
		SELECT tunlNM as tunnelNm,
		       NVL (ventlEqp, 0) AS ventlEqp,
		       NVL (mesureEqp, 0) AS mesureEqp,
		       NVL (prvnbeEqp, 0) AS prvnbeEqp,
		       NVL (mchnEqp, 0) AS mchnEqp,
		       NVL (etcEqp, 0) etcEqp
		  FROM (WITH ELCTY_FCLTS
		             AS (  SELECT MTNOF_CD, tunl_NM, FCLTS_CODE
		                     FROM (SELECT a.MTNOF_CD,
		                                  a.tunl_NM,
		                                  DECODE (b.TNRM_EQPMT_CLSS_CD,
		                                          NULL, -1,
		                                          '01', 1,
		                                          '02', 2,
		                                          '03', 3,
		                                          '06', 6,
		                                          7)
		                                     AS FCLTS_CODE
		                             FROM IOC_SDTIC_TUNNEL_TOT_MHRLS a,
		                                  (SELECT *
		                                     FROM IOC_SDTIC_TUNNEL_TROBL
		                                    WHERE     MTNOF_CD = #deptCode#
		                                          AND TUNNEL_SEQ = #seqMax# ) b
		                            WHERE     a.MTNOF_CD = #deptCode#
		                                  AND a.insr_seq = b.insr_seq(+) )
		                 GROUP BY MTNOF_CD, tunl_NM, FCLTS_CODE
		                 ORDER BY tunl_NM)
		        SELECT *
		          FROM (SELECT DECODE (FCLTS_CODE, -1, NULL, 1) MTNOF_CD,
		                       tunl_NM tunlNM,
		                       FCLTS_CODE
		                  FROM ELCTY_FCLTS) PIVOT (MIN (NVL (MTNOF_CD, 0))
		                                    FOR FCLTS_CODE
		                                    IN  (1 ventlEqp,
		                                        2 mesureEqp,
		                                        3 prvnbeEqp,
		                                        6 mchnEqp,
		                                        7 etcEqp)))
    </select> 
    <select id="FecElctyFcltsDAO.fecElctyFcltsLv2Ajax" parameterClass="FecSearchVO" resultClass="FecElctyFcltsVO">  
	    select ic_nm as icNm, cmpnd_sm as cmpntSm, eltgnr, dstnc_drs as dstncDrs, lght_twr as lghtTwr, dgtl_msrins as dgtlMsrins
		from   fec_elcty_fclts
		where dept_code = #deptCode#
    </select>
    <select id="FecPltwtrProcessDAO.fecPltwtrProcessLv2Ajax" parameterClass="FecSearchVO" resultClass="FecPltwtrProcessVO">  
		SELECT svar_NM,
		       NVL (screen, 0) AS screen,
		       NVL (fluxMdat, 0) AS fluxMdat,
		       NVL (sludgeDrt, 0) AS sludgeDrt,
		       NVL (aerationTank, 0) AS aerationTank,
		       NVL (etcEqp, 0) etcEqp
		  FROM (WITH ELCTY_FCLTS
		             AS (  SELECT MTNOF_CD, svar_NM, trobl_code
		                     FROM (SELECT a.MTNOF_CD, a.svar_NM, b.trobl_code
		                             FROM IOC_SDTIC_PLTWTR_TOT_MHRLS a,
		                                  (SELECT *
		                                     FROM IOC_SDTIC_PLTWTR_TROBL a,
		                                          IOC_SDTIC_PLTWTR_EQUIP_CODE b
		                                    WHERE     a.equip_code = b.equip_code
		                                          AND MTNOF_CD = #deptCode#
		                                          AND a.PLTWTR_SEQ = #seqMax#) b
		                            WHERE     a.MTNOF_CD = #deptCode#
		                                  AND a.svar_cd = b.svar_cd(+))
		                 GROUP BY MTNOF_CD, svar_NM, trobl_code
		                 ORDER BY svar_NM)
		        SELECT *
		          FROM (SELECT DECODE (trobl_code, -1, NULL, 1) MTNOF_CD,
		                       svar_NM,
		                       trobl_code
		                  FROM ELCTY_FCLTS) PIVOT (MIN (NVL (MTNOF_CD, 0))
		                                    FOR trobl_code
		                                    IN  (1 screen,
		                                        2 fluxMdat,
		                                        3 sludgeDrt,
		                                        4 aerationTank,
		                                        5 etcEqp)))
    </select>
    
    <select id="FecElctyTunnelDAO.fecElctyTunnelLv2Ajax" parameterClass="FecSearchVO" resultClass="FecElctyTunnelVO">  
		SELECT tunnel_Nm,
		       NVL (road_Lamp, 0) AS road_Lamp,
		       NVL (fire_Rcivr, 0) AS fire_Rcivr,
		       NVL (cmpnd_Elcty, 0) AS cmpnd_Elcty,
		       NVL (tunnel_Lamp, 0) AS tunnel_Lamp,
		       NVL (etc_Eqp, 0) etc_Eqp
		  FROM (WITH ELCTY_FCLTS
		             AS (  SELECT MTNOF_CD, FCLTS_CLSS_NM, FCLTS_CODE
		                     FROM (SELECT a.MTNOF_CD,
		                                  a.FCLTS_CLSS_NM,
		                                  DECODE (b.FCLTS_CODE,
		                                          NULL, -1,
		                                          1, 1,
		                                          2, 2,
		                                          5, 5,
		                                          6, 6,
		                                          0)
		                                     AS FCLTS_CODE
		                             FROM IOC_SDTIC_ELCTY_FCLTS_TOT a,
		                                  (SELECT *
		                                     FROM IOC_SDTIC_ELCTY_FCLTS_TROBL
		                                    WHERE     MTNOF_CD = #deptCode#
		                                          AND ELCTY_FCLTS_SEQ = #seqMax#
		                                          AND ELRM_FCLT_CLSS_CD = '1') b
		                            WHERE     a.MTNOF_CD = #deptCode#
		                                  AND a.ELRM_RTU_ID = b.ELRM_RTU_ID(+)
		                                  AND a.ELRM_FCLT_CLSS_CD = '1')
		                 GROUP BY MTNOF_CD, FCLTS_CLSS_NM, FCLTS_CODE
		                 ORDER BY FCLTS_CLSS_NM)
		        SELECT *
		          FROM (SELECT DECODE (FCLTS_CODE, -1, NULL, 1) MTNOF_CD,
		                       FCLTS_CLSS_NM tunnel_Nm,
		                       FCLTS_CODE
		                  FROM ELCTY_FCLTS) PIVOT (MIN (NVL (MTNOF_CD, 0))
		                                    FOR FCLTS_CODE
		                                    IN  (1 road_Lamp,
		                                        2 fire_Rcivr,
		                                        5 cmpnd_Elcty,
		                                        6 tunnel_Lamp,
		                                        0 etc_Eqp)))
    </select>
    
    <select id="FecElctyTollgateDAO.fecElctyTollgateLv2Ajax" parameterClass="FecSearchVO" resultClass="FecElctyTollgateVO">  
		SELECT tollgate_Nm,
		       NVL (cmpnd_Elcty, 0) AS cmpnd_Elcty,
		       NVL (road_Lamp, 0) AS road_Lamp,
		       NVL (solar_Inverter, 0) AS solar_Inverter,
		       NVL (eltgnr, 0) AS eltgnr,
		       NVL (etc_Eqp, 0) etc_Eqp
		  FROM (WITH ELCTY_FCLTS
		             AS (  SELECT MTNOF_CD, FCLTS_CLSS_NM, FCLTS_CODE
		                     FROM (SELECT a.MTNOF_CD,
		                                  a.FCLTS_CLSS_NM,
		                                  DECODE (b.FCLTS_CODE,
		                                          NULL, -1,
		                                          1, 1,
		                                          3, 3,
		                                          4, 4,
		                                          5, 5,
		                                          0)
		                                     AS FCLTS_CODE
		                             FROM IOC_SDTIC_ELCTY_FCLTS_TOT a,
		                                  (SELECT *
		                                     FROM IOC_SDTIC_ELCTY_FCLTS_TROBL
		                                    WHERE     MTNOF_CD = #deptCode#
		                                          AND ELCTY_FCLTS_SEQ = #seqMax#
		                                          AND ELRM_FCLT_CLSS_CD = '2') b
		                            WHERE     a.MTNOF_CD = #deptCode#
		                                  AND a.ELRM_RTU_ID = b.ELRM_RTU_ID(+)
		                                  AND a.ELRM_FCLT_CLSS_CD = '2')
		                 GROUP BY MTNOF_CD, FCLTS_CLSS_NM, FCLTS_CODE
		                 ORDER BY FCLTS_CLSS_NM)
		        SELECT *
		          FROM (SELECT DECODE (FCLTS_CODE, -1, NULL, 1) MTNOF_CD,
		                       FCLTS_CLSS_NM tollgate_Nm,
		                       FCLTS_CODE
		                  FROM ELCTY_FCLTS) PIVOT (MIN (NVL (MTNOF_CD, 0))
		                                    FOR FCLTS_CODE
		                                    IN  (1 road_Lamp,
		                                        3 eltgnr,
		                                        4 solar_Inverter,
		                                        5 cmpnd_Elcty,
		                                        0 etc_Eqp)))
    </select>
    
    <select id="FecElctyLampDAO.fecElctyLampLv2Ajax" parameterClass="FecSearchVO" resultClass="FecElctyLampVO">  
          SELECT a.MTNOF_CD,
                 a.FCLTS_DETL_LOCT_CTNT AS dstncNm,
                 a.FCLTS_INSL_DSTNC AS dstnc,
                 DECODE (b.ELRM_STRLT_CLSS_CD, 'A', '가로등', '조명탑') AS gubun,
                 DECODE (b.CUTGBN, 1, 1, 0) AS blackOut,
                 DECODE (b.LEAKSTAT, 1, 1, 0) AS shortCircuit,
                 DECODE (b.OPENDOORSTAT, 1, 1, 0) AS openDoor
            FROM IOC_SDTIC_LGHT_FCLTS_TOT a,
                 (SELECT *
                    FROM IOC_SDTIC_LGHT_FCLTS_TROBL
                   WHERE MTNOF_CD = #deptCode# AND LGHT_FCLTS_SEQ = #seqMax# ) b
           WHERE a.MTNOF_CD = #deptCode# AND a.DSTBX_LTTW_INFO_SEQ = b.LAMPINFOSEQ(+)
        GROUP BY a.MTNOF_CD,
                 a.FCLTS_DETL_LOCT_CTNT,
                 a.FCLTS_INSL_DSTNC,
                 b.ELRM_STRLT_CLSS_CD,
                 b.CUTGBN,
                 b.LEAKSTAT,
                 b.OPENDOORSTAT
        ORDER BY a.FCLTS_INSL_DSTNC
    </select>
    
    <select id="FecMainmapDAO.fecGetDeptAjax" parameterClass="FecSearchVO" resultClass="FecSearchVO">  
	    select mgmt_dptcd as deptcode, ggtm_x, ggtm_y from IOC_SDTIC_COMMON_DEPT_LC
		<isNotEmpty property="deptCode">
		       where MGMT_DPTCD = #deptCode#        
		</isNotEmpty>
		<isEmpty property="deptCode">
		       where MGMT_DPTCD in ('N01795','N01796','N02723','N01797','N01798','N01799','N01800','N01801')		     
		</isEmpty>

    </select>
    
    
    <select id="FecMainmapDAO.fecGetEventTunnelAjax" parameterClass="FecSearchVO" resultClass="fecEventVO">  
	    select b.hdqr_nm, b.mtnof_nm, b.mtnof_cd, xcord,  ycord, coord_type,   recover,  modl_nm||' '||evnt_nm content,
		a.tunl_nm fclts_name,  to_char(a.event_time, 'yyyy-mm-dd hh24:mi:ss') event_time 
		from 
		(
		select INSR_SEQ, TUNL_CD, MTNOF_CD, TUNL_NM, MODL_NM, RECOVER, EVNT_NM, max(EVENT_TIME)  as EVENT_TIME
		from IOC_SDTIC_TUNNEL_EVENT
		where 1=1 
		and EVENT_LEVEL <![CDATA[  >=  ]]> 0
		and EVENT_TIME <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
		<isNotEmpty property="deptCode">
		       and MTNOF_CD = #deptCode#        
		</isNotEmpty>
		group by INSR_SEQ, TUNL_CD, MTNOF_CD, TUNL_NM, MODL_NM, RECOVER, EVNT_NM
		) a,
		IOC_SDTIC_COMMON_DEPT b,
		(select TUNL_CD, decode(gubun,1,ggtm_xcord,lon) as xcord, decode(gubun,1,ggtm_ycord,lat) as ycord, GUBUN coord_type		
		from IOC_SDTIC_TUNNEL_LC) c
		where a.MTNOF_CD = b.MTNOF_CD	
		and a.TUNL_CD = c.TUNL_CD	
		<isNotEmpty property="bonbuCode">
		       and b.HDQR_CD = #bonbuCode#  		            
		</isNotEmpty>
		order by FCLTS_name, event_time desc 

    </select>
    
    <select id="FecMainmapDAO.fecGetEventElctsAjax" parameterClass="FecSearchVO" resultClass="fecEventVO">  
	    select b.hdqr_nm, b.mtnof_nm, b.mtnof_cd, xcord,  ycord, coord_type,  decode(recover,'Y','2','0') as recover,  content,
		a.elrm_fclts_nm fclts_name,  to_char(a.alarmtime, 'yyyy-mm-dd hh24:mi:ss') event_time,to_char(a.almlastdate, 'yyyy-mm-dd hh24:mi:ss') recover_time, a.alarmtime, decode(a.almlastdate,null,a.alarmtime,a.almlastdate) almlastdate 
		from 
		(select RTU_LAMPINFO_SEQ, MTNOF_CD, RETCODE as recover,  CONTENT, ELRM_STRLT_CLSS_CD, ELRM_FCLTS_NM, max(ALARMTIME) as ALARMTIME,  max(ALMLASTDATE) as ALMLASTDATE from IOC_SDTIC_ELCTY_FCLTS_EVENT
		where 1=1 
		and (
			ALARMTIME <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss') or
			ALMLASTDATE <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
		)
		and SYSGBN = 1
		<isNotEmpty property="deptCode">
		       and MTNOF_CD = #deptCode#        
		</isNotEmpty>
		
		group by RTU_LAMPINFO_SEQ, MTNOF_CD, RETCODE,  CONTENT, ELRM_STRLT_CLSS_CD, ELRM_FCLTS_NM
		) a,
		IOC_SDTIC_COMMON_DEPT b,
		(select RTU_LAMPINFO_SEQ,  decode(gubun,1,ggtm_xcord,lon) as xcord, decode(gubun,1,ggtm_ycord,lat) as ycord, GUBUN coord_type		
		from IOC_SDTIC_ELCTY_FCLTS_LC) c
		where a.MTNOF_CD = b.MTNOF_CD
		and a.RTU_LAMPINFO_SEQ = c.RTU_LAMPINFO_SEQ
		<isNotEmpty property="bonbuCode">
		       and b.HDQR_CD = #bonbuCode#  		            
		</isNotEmpty>
		union all
		select b.hdqr_nm, b.mtnof_nm, b.mtnof_cd, nvl(xcord, 0) as xcord,  nvl(ycord, 0 ) as ycord, coord_type,  decode(recover,'Y','2','0') as  recover,  content,
		a.elrm_fclts_nm fclts_name,  to_char(a.alarmtime, 'yyyy-mm-dd hh24:mi:ss') event_time,to_char(a.almlastdate, 'yyyy-mm-dd hh24:mi:ss') recover_time, a.alarmtime, decode(a.almlastdate,null,a.alarmtime,a.almlastdate) almlastdate 
		from 
		(select RTU_LAMPINFO_SEQ, MTNOF_CD, RETCODE as recover,  CONTENT, ELRM_STRLT_CLSS_CD, ELRM_FCLTS_NM, max(ALARMTIME) as ALARMTIME,  max(ALMLASTDATE) as ALMLASTDATE from IOC_SDTIC_ELCTY_FCLTS_EVENT
		where 1=1 
		and (
			ALARMTIME <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss') or
			ALMLASTDATE <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
		)
		and SYSGBN = 2
		<isNotEmpty property="deptCode">
		       and MTNOF_CD = #deptCode#        
		</isNotEmpty>
		group by RTU_LAMPINFO_SEQ, MTNOF_CD, RETCODE,  CONTENT, ELRM_STRLT_CLSS_CD, ELRM_FCLTS_NM
		) a,
		IOC_SDTIC_COMMON_DEPT b,
		(select RTU_LAMPINFO_SEQ, ELRM_STRLT_CLSS_CD, GGTM_XCORD XCORD, GGTM_YCORD YCORD, 1 coord_type
		from IOC_SDTIC_LGHT_FCLTS_LC) c
		where a.MTNOF_CD = b.MTNOF_CD
		and a.RTU_LAMPINFO_SEQ = c.RTU_LAMPINFO_SEQ
		and a.ELRM_STRLT_CLSS_CD = c.ELRM_STRLT_CLSS_CD	
		<isNotEmpty property="bonbuCode">
		       and b.HDQR_CD = #bonbuCode#  		            
		</isNotEmpty>	
		order by fclts_name, almlastdate desc, alarmtime desc 

    </select>
    
    <select id="FecMainmapDAO.fecGetEventSvarAjax" parameterClass="FecSearchVO" resultClass="fecEventVO">
    	select b.hdqr_nm, b.mtnof_nm, b.mtnof_cd, decode(c.gubun,1,c.ggtm_xcord,c.lon) as xcord, decode(c.gubun,1,c.ggtm_ycord,c.lat) ycord, c.gubun coord_type, re as recover, a.dwrm_insr_nm||' '||a.event_division_nm||' '||a.pont_detl_istc as content,
		a.svar_nm as fclts_name,  to_char(a.event_time, 'yyyy-mm-dd hh24:mi:ss') as event_time
		from
		(select MTNOF_CD, SVAR_CD, SVAR_NM, EQUIP_CODE, DEVICE_CODE, EVENT_DIVISION, EVENT_DIVISION_NM, DWRM_INSR_NM, PONT_DETL_ISTC, re, max(EVENT_TIME)  as   EVENT_TIME,
		SVAR_CD||'_'||EQUIP_CODE||'_'||DEVICE_CODE||'_'||PONT_DETL_ISTC as uniq_code
		from IOC_SDTIC_PLTWTR_EVENT
		where 1=1 
		<isNotEmpty property="deptCode">
		       and MTNOF_CD = #deptCode#        
		</isNotEmpty>
		and EVENT_TIME <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
		group by MTNOF_CD, SVAR_CD, SVAR_NM, EQUIP_CODE, DEVICE_CODE, EVENT_DIVISION, EVENT_DIVISION_NM, DWRM_INSR_NM, PONT_DETL_ISTC, re, SVAR_CD||'_'||EQUIP_CODE||'_'||DEVICE_CODE) a,
		IOC_SDTIC_COMMON_DEPT b,
		IOC_SDTIC_SVAR_LC c
		where 1=1 
		and a.MTNOF_CD = b.MTNOF_CD
		and a.SVAR_CD = c.SVAR_CD		
		<isNotEmpty property="bonbuCode">
		       and b.HDQR_CD = #bonbuCode#  		            
		</isNotEmpty>
		order by FCLTS_name, event_time desc 
    </select>
    
    <select id="FecMainmapDAO.fecGetEventSlopeAjax" parameterClass="FecSearchVO" resultClass="fecEventVO">  
		select b.hdqr_nm, b.mtnof_nm, b.mtnof_cd, b.xcord, b.ycord, b.coord_type,   a.recover,  a.MSIS_SNSR_ID||'번 감지기에서 '||decode(MSIS_NTFC_KIND_CD,'0',' 비탈면 경고', '1',' 비탈면 주의',' 배터리 이상') as content,
        b.fclts_name,  to_char(a.event_time, 'yyyy-mm-dd hh24:mi:ss') event_time , to_char(a.recover_time, 'yyyy-mm-dd hh24:mi:ss') recover_time
        From 
        (
        select MSIS_GTWY_ID, MSIS_SNSR_ID, MSIS_NTFC_KIND_CD,
        '0' as recover, 
        /* 사면조치 없음
        decode(USE_YN,'0', '2', '0') as recover, 
        */
        max(FSTTM_RGST_DTTM) as event_time, max(LSTTM_ALTR_DTTM) as recover_time
        from IOC_SDTIC_SNSR_EVENT
        where 1=1 
        and
		(
		FSTTM_RGST_DTTM <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss') or
		LSTTM_ALTR_DTTM <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
		)      
        group by MSIS_GTWY_ID, MSIS_SNSR_ID, MSIS_NTFC_KIND_CD, '0'
        ) a,
        (select MSIS_GTWY_ID, MSIS_SNSR_ID, HDQR_NM , HDQR_CD, MTNOF_NM, MTNOF_CD, GGTM_XCORD as xcord, GGTM_YCORD as ycord, '1' coord_type, 
        USE_ROTNM ||' '|| PBUS_STPNT_DSTNC ||'km '|| DRVE_DRNM ||' 방향'  as fclts_name
        from IOC_SDTIC_SNSR_TOT_MHRLS) b
        where a.MSIS_GTWY_ID = b.MSIS_GTWY_ID
        and a.MSIS_SNSR_ID = b.MSIS_SNSR_ID
        <isNotEmpty property="deptCode">
		       and b.MTNOF_CD = #deptCode#  		            
		</isNotEmpty>       
		<isNotEmpty property="bonbuCode">
		       and b.HDQR_CD = #bonbuCode#  		            
		</isNotEmpty>
        order by MTNOF_CD, FCLTS_name, recover_time desc, event_time desc 
    </select>
    
    <select id="FecMainmapDAO.fecGetEventCctvAjax" parameterClass="FecSearchVO" resultClass="fecEventVO">  
		select b.hdqr_nm, b.mtnof_nm, b.mtnof_cd, GGTM_XCORD as xcord,  GGTM_YCORD as ycord, 1 coord_type,  0 recover,  ' 장애 ' content,
        a.SPIN_INTG_NM fclts_name,  to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') event_time 
        from 
		(select * From IOC_SDTIC_HIWAY_CCTV where cctvurl is null) a,
		IOC_SDTIC_COMMON_DEPT b
		where a.MTNOF_CD = b.MTNOF_CD    
		<isNotEmpty property="bonbuCode">
		               and b.HDQR_CD = #bonbuCode#                      
		        </isNotEmpty>
		<isNotEmpty property="deptCode">
		               and b.MTNOF_CD = #deptCode#        
		        </isNotEmpty> 
        order by MTNOF_CD, FCLTS_name
    </select>
    
    <select id="FecMainmapDAO.fecJisaCodeAjax" parameterClass="FecSearchVO" resultClass="java.util.HashMap">  
		select MTNOF_CD code, MTNOF_NM name from IOC_SDTIC_COMMON_DEPT
		where 1=1 
		and HDQR_CD = #deptCode#
		and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
    </select>  
    
    <select id="FecMainmapDAO.FecEventListLv2" parameterClass="FecSearchVO" resultClass="fecEventVO">  
		select  '터널' as kubun, modl_nm||' '||evnt_nm content,
		        a.tunl_nm fclts_name,  to_char(a.event_time, 'yyyy-mm-dd hh24:mi:ss') event_time 
		        from 
		        (
		        select INSR_SEQ, TUNL_CD, MTNOF_CD, TUNL_NM, MODL_NM, RECOVER, EVNT_NM, max(EVENT_TIME)  as EVENT_TIME
		        from IOC_SDTIC_TUNNEL_EVENT
		        where 1=1 
		        and EVENT_LEVEL <![CDATA[ >=  ]]>  0
		        and RECOVER = 0
		        and EVENT_TIME <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
		        and MTNOF_CD = #deptCode#  
		        group by INSR_SEQ, TUNL_CD, MTNOF_CD, TUNL_NM, MODL_NM, RECOVER, EVNT_NM        
		        ) a
		union all
		select  DECODE(SYSGBN,'1',decode(a.ELRM_STRLT_CLSS_CD,'1','전기(터널)','전기(영업소)'), decode(a.ELRM_STRLT_CLSS_CD,'A','전기(가로등)','전기(조명탑)')) as kubun, content,
		        a.elrm_fclts_nm fclts_name,  to_char(a.alarmtime, 'yyyy-mm-dd hh24:mi:ss') event_time 
		        from 
		        (select RTU_LAMPINFO_SEQ, MTNOF_CD, RETCODE as recover,  CONTENT, ELRM_STRLT_CLSS_CD, ELRM_FCLTS_NM, SYSGBN, max(ALARMTIME) as ALARMTIME 
		        from IOC_SDTIC_ELCTY_FCLTS_EVENT
		        where 1=1 
		        and (
					ALARMTIME <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss') or
					ALMLASTDATE <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
				)       
		        and MTNOF_CD = #deptCode#  
		        and RETCODE = 'N'      
		        group by RTU_LAMPINFO_SEQ, MTNOF_CD, RETCODE,  CONTENT, ELRM_STRLT_CLSS_CD, ELRM_FCLTS_NM, SYSGBN
		        ) a
		union all
		select  '오수' as kubun, a.dwrm_insr_nm||' '||a.event_division_nm||' '||a.pont_detl_istc as content,
		        a.svar_nm as fclts_name,  to_char(a.event_time, 'yyyy-mm-dd hh24:mi:ss') as event_time
		        from
		        (select MTNOF_CD, SVAR_CD, SVAR_NM, EQUIP_CODE, DEVICE_CODE, EVENT_DIVISION, EVENT_DIVISION_NM, DWRM_INSR_NM, PONT_DETL_ISTC, re, max(EVENT_TIME)  as   EVENT_TIME,
		        SVAR_CD||'_'||EQUIP_CODE||'_'||DEVICE_CODE||'_'||PONT_DETL_ISTC as uniq_code
		        from IOC_SDTIC_PLTWTR_EVENT
		        where 1=1 
		        and MTNOF_CD = #deptCode#
		        and re = '0'
		        and EVENT_TIME <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
		        group by MTNOF_CD, SVAR_CD, SVAR_NM, EQUIP_CODE, DEVICE_CODE, EVENT_DIVISION, EVENT_DIVISION_NM, DWRM_INSR_NM, PONT_DETL_ISTC, re, SVAR_CD||'_'||EQUIP_CODE||'_'||DEVICE_CODE) a
		union all  
		select  '사면' as kubun,  a.MSIS_SNSR_ID||'번 감지기에서 '||decode(MSIS_NTFC_KIND_CD,'0',' 비탈면 경고', '1',' 비탈면 주의',' 배터리 이상') as content,
		        b.fclts_name,  to_char(a.event_time, 'yyyy-mm-dd hh24:mi:ss') event_time
		        From 
		        (
		        select MSIS_GTWY_ID, MSIS_SNSR_ID, MSIS_NTFC_KIND_CD, max(FSTTM_RGST_DTTM) as event_time
		        from IOC_SDTIC_SNSR_EVENT
		        where 1=1 
		        and USE_YN <![CDATA[  <>  ]]> '0'
		        and
				(
				FSTTM_RGST_DTTM <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss') or
				LSTTM_ALTR_DTTM <![CDATA[  >=  ]]> to_date(to_char(sysdate, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
				)    
		        group by MSIS_GTWY_ID, MSIS_SNSR_ID, MSIS_NTFC_KIND_CD
		        ) a,
		        (select MSIS_GTWY_ID, MSIS_SNSR_ID, HDQR_NM , HDQR_CD, MTNOF_NM, MTNOF_CD, GGTM_XCORD as xcord, GGTM_YCORD as ycord, '1' coord_type, 
		        USE_ROTNM ||' '|| PBUS_STPNT_DSTNC ||'km '|| DRVE_DRNM ||' 방향'  as fclts_name
		        from IOC_SDTIC_SNSR_TOT_MHRLS) b
		        where a.MSIS_GTWY_ID = b.MSIS_GTWY_ID
		        and a.MSIS_SNSR_ID = b.MSIS_SNSR_ID
		        and b.MTNOF_CD = #deptCode#   
		order by event_time desc
    </select>
    
    <select id="FecMainmapDAO.mainSptSensor" resultClass="java.util.HashMap">  
		select name, max(troblCnt) as troblCnt , max(totalCnt) as totalCnt
		from 
		(
		select 'tunnel' as name, 0 as troblCnt, count(distinct tunl_cd) as totalCnt from IOC_SDTIC_TUNNEL_TOT_MHRLS
		union all
		select 'tunnel' as name, count(distinct tunl_cd) as troblCnt,0 totalCnt from IOC_SDTIC_TUNNEL_TROBL
		where TUNNEL_SEQ  = 
		(select max(TUNNEL_SEQ) as TUNNEL_SEQ 
		from IOC_SDTIC_TUNNEL_TROBL
		))
		group by name
		union all
		select name, sum(troblCnt) as troblCnt, sum(totalCnt) as totalCnt
		from
		(
		select 'elcts' as name, 0 as troblCnt, count(distinct ELRM_RTU_ID) as totalCnt from IOC_SDTIC_ELCTY_FCLTS_TOT
		union all
		select 'elcts' as name, count(distinct ELRM_RTU_ID) as troblCnt,0 totalCnt from IOC_SDTIC_ELCTY_FCLTS_TROBL
		where ELCTY_FCLTS_SEQ  = 
		(select max(ELCTY_FCLTS_SEQ) as ELCTY_FCLTS_SEQ 
		from IOC_SDTIC_ELCTY_FCLTS_TROBL
		)
		union all
		select 'elcts' as name, 0 as troblCnt, count(distinct DSTBX_LTTW_INFO_SEQ) as totalCnt from IOC_SDTIC_LGHT_FCLTS_TOT
		union all
		select 'elcts' as name, count(distinct LAMPINFOSEQ) as troblCnt,0 totalCnt from IOC_SDTIC_LGHT_FCLTS_TROBL
		where LGHT_FCLTS_SEQ  = 
		(select max(LGHT_FCLTS_SEQ) as LGHT_FCLTS_SEQ 
		from IOC_SDTIC_LGHT_FCLTS_TROBL
		)
		)
		group by name
		union all
		select name, max(troblCnt) as troblCnt , max(totalCnt) as totalCnt
		from 
		(
		select 'svar' as name, 0 as troblCnt, count(distinct SVAR_CD) as totalCnt from IOC_SDTIC_PLTWTR_TOT_MHRLS
		union all
		select 'svar' as name, count(distinct SVAR_CD) as troblCnt,0 totalCnt from IOC_SDTIC_PLTWTR_TROBL
		where PLTWTR_SEQ  = 
		(select max(PLTWTR_SEQ) as PLTWTR_SEQ 
		from IOC_SDTIC_PLTWTR_TROBL
		))
		group by name
		union all
		select name, max(troblCnt) as troblCnt , max(totalCnt) as totalCnt
		from 
		(
		select 'slp' as name, 0 as troblCnt, count(distinct MSIS_GTWY_ID) as totalCnt from IOC_SDTIC_SNSR_TOT_MHRLS
		union all
		select 'slp' as name, count(distinct MSIS_GTWY_ID) as troblCnt,0 totalCnt from IOC_SDTIC_SNSR_TROBL
		where SNSR_SEQ  = 
		(select max(SNSR_SEQ) as SNSR_SEQ 
		from IOC_SDTIC_SNSR_TROBL
		))
		group by name
		union all
		select 'cctv' as name, sum(trobl) as troblCnt, sum(tot) as totalCnt
		from
		(
		select 1 as tot, decode(nvl(cctvurl,''),'',1,0) as trobl from IOC_SDTIC_HIWAY_CCTV
		)
    </select>

	<select id="FecSlopeDAO.fecSlopeLv2Ajax" parameterClass="FecSearchVO" resultClass="FecSlopeVO">  
		SELECT USE_ROTNM AS useRotnm,
		         DRVE_DRNM AS drveDrnm,
		         PBUS_STPNT_DSTNC AS dstnc,
		         NVL (impactTrobl, 0) AS impactTrobl,
		         NVL (batteryTrobl, 0) batteryTrobl
		    FROM (WITH ELCTY_FCLTS
		               AS (  SELECT USE_ROTNM,
		                            DRVE_DRNM,
		                            PBUS_STPNT_DSTNC,
		                            DECODE (TROBL_TYPE,  NULL, -1,  1, 1,  2, 2)
		                               AS TROBL_TYPE
		                       FROM (SELECT USE_ROTNM,
		                                    DRVE_DRNM,
		                                    MSIS_GTWY_ID,
		                                    MSIS_SNSR_ID,
		                                    PBUS_STPNT_DSTNC
		                               FROM IOC_SDTIC_SNSR_TOT_MHRLS
		                              WHERE MTNOF_CD = #deptCode#) a
		                            LEFT OUTER JOIN (SELECT a.MSIS_GTWY_ID,
		                                                    a.MSIS_SNSR_ID,
		                                                    a.TROBL_TYPE,
		                                                    a.use_yn,
		                                                    a.FSTTM_RGST_DTTM
		                                               FROM IOC_SDTIC_SNSR_TROBL a
		                                              WHERE a.SNSR_SEQ = #seqMax#) b
		                               ON a.MSIS_GTWY_ID = b.MSIS_GTWY_ID
		                   GROUP BY USE_ROTNM,
		                            DRVE_DRNM,
		                            PBUS_STPNT_DSTNC,
		                            TROBL_TYPE)
		          SELECT *
		            FROM (SELECT DECODE (TROBL_TYPE, -1, NULL, 1) MTNOF_CD,
		                         USE_ROTNM,
		                         PBUS_STPNT_DSTNC,
		                         DRVE_DRNM,
		                         TROBL_TYPE
		                    FROM ELCTY_FCLTS) PIVOT (MIN (NVL (MTNOF_CD, 0))
		                                      FOR TROBL_TYPE
		                                      IN (1 impactTrobl, 2 batteryTrobl)))
		ORDER BY PBUS_STPNT_DSTNC
    </select>  
    
    <select id="FecMainmapDAO.fecSptEqpOprCstsLv1" parameterClass="FecSearchVO"  resultClass="java.util.HashMap">  
		select name, mtnof_nm, mtnof_cd, sum(troblCnt) as troblCnt, sum(totalCnt) as totalCnt
		from 
		(
		select 'tunnel' as name, b.MTNOF_NM, b.MTNOF_CD, a.TUNL_CD, 0 as troblCnt, decode(nvl(a.TUNL_CD,0),0,0,1) as  totalCnt  from IOC_SDTIC_TUNNEL_TOT_MHRLS a, 
		(select MTNOF_CD , MTNOF_NM  from IOC_SDTIC_COMMON_DEPT
		        where 1=1 
		        and HDQR_CD = #bonbuCode#
		        and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
		) b
		where a.MTNOF_CD(+) = b.MTNOF_CD
		group by b.MTNOF_NM, a.TUNL_CD, b.MTNOF_CD 
		union all
		select 'tunnel' as name, b.MTNOF_NM, b.MTNOF_CD, a.TUNL_CD, decode(nvl(a.TUNL_CD,0),0,0,1) as troblCnt, 0 as totalCnt  from 
		(select * from IOC_SDTIC_TUNNEL_TROBL 
		where TUNNEL_SEQ = 
		(select max(TUNNEL_SEQ) as TUNNEL_SEQ 
		from IOC_SDTIC_TUNNEL_TROBL
		)
		) a, 
		(select MTNOF_CD , MTNOF_NM  from IOC_SDTIC_COMMON_DEPT
		        where 1=1 
		        and HDQR_CD = #bonbuCode#
		        and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
		) b
		where a.MTNOF_CD(+) = b.MTNOF_CD 
		group by b.MTNOF_NM, a.TUNL_CD, b.MTNOF_CD 
		)
		group by name, MTNOF_NM, MTNOF_CD
		union all
		
		select name, MTNOF_NM, MTNOF_CD, sum(troblCnt) as troblCnt, sum(totalCnt) as totalCnt
		from 
		(
		select 'elcts_tunnel' as name, b.MTNOF_NM, b.MTNOF_CD, a.ELRM_RTU_ID, 0 as troblCnt, decode(nvl(a.ELRM_RTU_ID,0),0,0,1) as totalCnt  from 
		(select * from IOC_SDTIC_ELCTY_FCLTS_TOT
		where ELRM_FCLT_CLSS_CD = 1) a,
		(select MTNOF_CD , MTNOF_NM  from IOC_SDTIC_COMMON_DEPT
		        where 1=1 
		        and HDQR_CD = #bonbuCode#
		        and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
		) b
		where a.MTNOF_CD(+) = b.MTNOF_CD 
		group by 'elcts_tunnel', b.MTNOF_NM, a.ELRM_RTU_ID, b.MTNOF_CD 
		union all
		select 'elcts_tunnel' as name, b.MTNOF_NM, b.MTNOF_CD, a.ELRM_RTU_ID, decode(nvl(a.ELRM_RTU_ID,0),0,0,1) as troblCnt, 0 as totalCnt  from 
		(select * from IOC_SDTIC_ELCTY_FCLTS_TROBL 
		where ELRM_FCLT_CLSS_CD = 1
		and ELCTY_FCLTS_SEQ = 
		(select max(ELCTY_FCLTS_SEQ) as ELCTY_FCLTS_SEQ 
		from IOC_SDTIC_ELCTY_FCLTS_TROBL
		)
		) a, 
		(select MTNOF_CD , MTNOF_NM  from IOC_SDTIC_COMMON_DEPT
		        where 1=1 
		        and HDQR_CD = #bonbuCode#
		        and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
		) b
		where a.MTNOF_CD(+) = b.MTNOF_CD 
		group by 'elcts_tunnel', b.MTNOF_NM, a.ELRM_RTU_ID, b.MTNOF_CD 
		)
		group by name, MTNOF_NM, MTNOF_CD
		union all
		
		select name, MTNOF_NM, MTNOF_CD, sum(troblCnt) as troblCnt, sum(totalCnt) as totalCnt
		from 
		(
		select 'elcts_office' as name, b.MTNOF_NM, b.MTNOF_CD, a.ELRM_RTU_ID, 0 as troblCnt, decode(nvl(a.ELRM_RTU_ID,0),0,0,1) as totalCnt  from 
		(select * from IOC_SDTIC_ELCTY_FCLTS_TOT
		where ELRM_FCLT_CLSS_CD = 2) a,
		(select MTNOF_CD , MTNOF_NM  from IOC_SDTIC_COMMON_DEPT
		        where 1=1 
		        and HDQR_CD = #bonbuCode#
		        and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
		) b
		where a.MTNOF_CD(+) = b.MTNOF_CD 
		group by 'elcts_office', b.MTNOF_NM, a.ELRM_RTU_ID, b.MTNOF_CD 
		union all
		select 'elcts_office' as name, b.MTNOF_NM, b.MTNOF_CD, a.ELRM_RTU_ID, decode(nvl(a.ELRM_RTU_ID,0),0,0,1) as troblCnt, 0 as totalCnt  from 
		(select * from IOC_SDTIC_ELCTY_FCLTS_TROBL 
		where ELRM_FCLT_CLSS_CD = 2
		and ELCTY_FCLTS_SEQ = 
		(select max(ELCTY_FCLTS_SEQ) as ELCTY_FCLTS_SEQ 
		from IOC_SDTIC_ELCTY_FCLTS_TROBL
		)
		) a, 
		(select MTNOF_CD , MTNOF_NM  from IOC_SDTIC_COMMON_DEPT
		        where 1=1 
		        and HDQR_CD = #bonbuCode#
		        and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
		) b
		where a.MTNOF_CD(+) = b.MTNOF_CD 
		group by 'elcts_office', b.MTNOF_NM, a.ELRM_RTU_ID, b.MTNOF_CD 
		)
		group by name, MTNOF_NM, MTNOF_CD
		union all
		
		select name, MTNOF_NM, MTNOF_CD, sum(troblCnt) as troblCnt, sum(totalCnt) as totalCnt
		from 
		(
		select 'elcts_lamp' as name, b.MTNOF_NM, b.MTNOF_CD, a.DSTBX_LTTW_INFO_SEQ, 0 as troblCnt, decode(nvl(a.DSTBX_LTTW_INFO_SEQ,0),0,0,1) as totalCnt  from IOC_SDTIC_LGHT_FCLTS_TOT a, 
		(select MTNOF_CD , MTNOF_NM  from IOC_SDTIC_COMMON_DEPT
		        where 1=1 
		        and HDQR_CD = #bonbuCode#
		        and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
		) b
		where a.MTNOF_CD(+) = b.MTNOF_CD 
		group by b.MTNOF_NM, a.DSTBX_LTTW_INFO_SEQ, b.MTNOF_CD 
		union all
		select 'elcts_lamp' as name, b.MTNOF_NM, b.MTNOF_CD, a.LAMPINFOSEQ DSTBX_LTTW_INFO_SEQ, decode(nvl(a.LAMPINFOSEQ,0),0,0,1) as troblCnt, 0 as totalCnt  from 
		(select * from IOC_SDTIC_LGHT_FCLTS_TROBL 
		where LGHT_FCLTS_SEQ = 
		(select max(LGHT_FCLTS_SEQ) as LGHT_FCLTS_SEQ 
		from IOC_SDTIC_LGHT_FCLTS_TROBL
		)
		) a, 
		(select MTNOF_CD , MTNOF_NM  from IOC_SDTIC_COMMON_DEPT
		        where 1=1 
		        and HDQR_CD = #bonbuCode#
		        and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
		) b
		where a.MTNOF_CD(+) = b.MTNOF_CD  
		group by b.MTNOF_NM, a.LAMPINFOSEQ, b.MTNOF_CD 
		)
		group by name, MTNOF_NM, MTNOF_CD
		union all
		
		select name, MTNOF_NM, MTNOF_CD, sum(troblCnt) as troblCnt, sum(totalCnt) as totalCnt
		from 
		(
		select 'svar' as name, b.MTNOF_NM, b.MTNOF_CD, a.SVAR_CD, 0 as troblCnt, decode(nvl(a.SVAR_CD,0),0,0,1) as totalCnt  from IOC_SDTIC_PLTWTR_TOT_MHRLS a, 
		(select MTNOF_CD , MTNOF_NM  from IOC_SDTIC_COMMON_DEPT
		        where 1=1 
		        and HDQR_CD = #bonbuCode#
		        and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
		) b
		where a.MTNOF_CD(+) = b.MTNOF_CD 
		group by b.MTNOF_NM, a.SVAR_CD, b.MTNOF_CD 
		union all
		select 'svar' as name, b.MTNOF_NM, b.MTNOF_CD, a.SVAR_CD , decode(nvl(a.SVAR_CD,0),0,0,1) as troblCnt, 0 as totalCnt  from 
		(select * from IOC_SDTIC_PLTWTR_TROBL 
		where PLTWTR_SEQ = 
		(select max(PLTWTR_SEQ) as PLTWTR_SEQ 
		from IOC_SDTIC_PLTWTR_TROBL
		)
		) a, 
		(select MTNOF_CD , MTNOF_NM  from IOC_SDTIC_COMMON_DEPT
		        where 1=1 
		        and HDQR_CD = #bonbuCode#
		        and (MTNOF_NM not like '%기계%' and MTNOF_NM not like '%본부%' and MTNOF_NM not like '%관리%')
		) b
		where a.MTNOF_CD(+) = b.MTNOF_CD 
		group by b.MTNOF_NM, a.SVAR_CD, b.MTNOF_CD 
		)
		group by name, MTNOF_NM, MTNOF_CD
		union all
		
		  SELECT name,
		         MTNOF_NM,
		         MTNOF_CD,
		         SUM (troblCnt) AS troblCnt,
		         SUM (totalCnt) AS totalCnt
		    FROM (  SELECT 'slp' AS name,
		                   b.MTNOF_NM,
		                   b.MTNOF_CD,
		                   a.MSIS_GTWY_ID,
		                   0 AS troblCnt,
		                   DECODE (NVL (a.MSIS_GTWY_ID, 0), 0, 0, 1) AS totalCnt
		              FROM IOC_SDTIC_SNSR_TOT_MHRLS a,
		                   (SELECT MTNOF_CD, MTNOF_NM
		                      FROM IOC_SDTIC_COMMON_DEPT
		                     WHERE     1 = 1
		                           AND HDQR_CD = #bonbuCode#
		                           AND (    MTNOF_NM NOT LIKE '%기계%'
		                                AND MTNOF_NM NOT LIKE '%본부%'
		                                AND MTNOF_NM NOT LIKE '%관리%')) b
		             WHERE a.MTNOF_CD(+) = b.MTNOF_CD
		          GROUP BY b.MTNOF_NM, b.MTNOF_CD, a.MSIS_GTWY_ID
		          UNION ALL
		          SELECT 'slp' as name,
		                 b.MTNOF_NM,
		                 b.MTNOF_CD,
		                 a.MSIS_GTWY_ID,
		                 DECODE (NVL (a.MSIS_GTWY_ID, 0), 0, 0, 1) AS troblCnt,
		                 0 as totalCnt
		            FROM (  SELECT 'slp' AS name,
		                           b.MTNOF_NM,
		                           b.MTNOF_CD,
		                           a.MSIS_GTWY_ID,
		                           DECODE (NVL (a.MSIS_GTWY_ID, 0), 0, 0, 1) AS troblCnt,
		                           0 AS totalCnt
		                      FROM (SELECT *
		                              FROM IOC_SDTIC_SNSR_TROBL
		                             WHERE SNSR_SEQ =
		                                      (SELECT MAX (SNSR_SEQ) AS SNSR_SEQ
		                                         FROM IOC_SDTIC_PLTWTR_TROBL)) a,
		                           IOC_SDTIC_SNSR_TOT_MHRLS b
		                     WHERE     a.MSIS_GTWY_ID = b.MSIS_GTWY_ID
		                           AND a.MSIS_SNSR_ID = b.MSIS_SNSR_ID
		                           AND b.HDQR_CD = #bonbuCode#
		                  GROUP BY b.MTNOF_NM, a.MSIS_GTWY_ID, b.MTNOF_CD) a,
		         (SELECT MTNOF_CD, MTNOF_NM
		            FROM IOC_SDTIC_COMMON_DEPT
		           WHERE     1 = 1
		                 AND HDQR_CD = #bonbuCode#
		                 AND (    MTNOF_NM NOT LIKE '%기계%'
		                      AND MTNOF_NM NOT LIKE '%본부%'
		                      AND MTNOF_NM NOT LIKE '%관리%')) b
		   WHERE a.MTNOF_CD(+) = b.MTNOF_CD   
		GROUP BY name, b.MTNOF_NM, b.MTNOF_CD, a.MSIS_GTWY_ID)
		GROUP BY name,
		         MTNOF_NM,
		         MTNOF_CD
		         
		union all
		SELECT NVL (a.name, 'cctv') AS name,
		         b.MTNOF_NM,
		         b.MTNOF_CD,
		         DECODE (SUM (a.troblCnt), NULL, 0, SUM (a.troblCnt)) AS troblCnt,
		         DECODE (SUM (a.totalCnt), NULL, 0, SUM (a.totalCnt)) AS totalCnt
		    FROM (SELECT 'cctv' AS name,
		                 MTNOF_CD,
		                 DECODE (NVL (cctvurl, ''), '', 1, 0) AS troblCnt,
		                 1 AS totalCnt
		            FROM IOC_SDTIC_HIWAY_CCTV
		           WHERE cctvurl IS NULL) a,
		         (SELECT MTNOF_CD, MTNOF_NM
		            FROM IOC_SDTIC_COMMON_DEPT
		           WHERE     1 = 1
		                 AND HDQR_CD = #bonbuCode#
		                 AND (    MTNOF_NM NOT LIKE '%기계%'
		                      AND MTNOF_NM NOT LIKE '%본부%'
		                      AND MTNOF_NM NOT LIKE '%관리%')) b
		   WHERE a.MTNOF_CD(+) = b.MTNOF_CD
		GROUP BY a.name, b.MTNOF_NM, b.MTNOF_CD		         
		order by name,MTNOF_CD
		
				
    </select>
    <select id="FecMainmapDAO.fecAreclTroblOccrrncManagtLv1" parameterClass="FecSearchVO"  resultClass="java.util.HashMap"> 
	    	SELECT   b.MTNOF_NM AS MTNOF_NM,
			         b.MTNOF_CD MTNOF_CD,
			         NVL (SUM (a.today_trobl), 0) AS trobl,
			         NVL (SUM (a.today_recover), 0) AS recover,
			         NVL (SUM (a.pre_trobl), 0) AS pre_trobl,
			         NVL (SUM (a.pre_recover), 0) AS pre_recover
			    FROM (  SELECT fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM,
			                   SUM (today_trobl) today_trobl,
			                   SUM (today_recover) today_recover,
			                   SUM (pre_trobl) pre_trobl,
			                   SUM (pre_recover) pre_recover
			              FROM (  SELECT fac_type,
			                             1 AS fac_idx,
			                             MTNOF_CD,
			                             TO_CHAR (TUNL_CD) AS FAC_CD,
			                             TUNL_NM AS FAC_NM,
			                             SUM (today_trobl) today_trobl,
			                             SUM (today_recover) today_recover,
			                             SUM (pre_trobl) pre_trobl,
			                             SUM (pre_recover) pre_recover
			                        FROM (SELECT '터널' AS fac_type,
			                                     TUNL_CD,
			                                     MTNOF_CD,
			                                     TUNL_NM,
			                                     CASE
			                                        WHEN    (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 0)
			                                             OR (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 2)
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_trobl,
			                                     CASE
			                                        WHEN     RECOVER_TIME =
			                                                    TO_CHAR (SYSDATE, 'yyyymmdd')
			                                             AND RECOVER = 2
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_recover,
			                                     CASE
			                                        WHEN    (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 0)
			                                             OR (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 2)
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_trobl,
			                                     CASE
			                                        WHEN     RECOVER_TIME =
			                                                    TO_CHAR (SYSDATE - 1,
			                                                             'yyyymmdd')
			                                             AND RECOVER = 2
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_recover
			                                FROM (  SELECT TUNL_CD,
			                                               MTNOF_CD,
			                                               TUNL_NM,
			                                               RECOVER,
			                                               TO_CHAR (EVENT_TIME, 'yyyymmdd')
			                                                  AS EVENT_TIME,
			                                               TO_CHAR (RECOVER_TIME, 'yyyymmdd')
			                                                  AS RECOVER_TIME,
			                                               COUNT (*) AS cnt
			                                          FROM IOC_SDTIC_TUNNEL_EVENT
			                                         WHERE     1 = 1
			                                               AND EVENT_LEVEL <![CDATA[  >=  ]]> 0
			                                               AND (   EVENT_TIME <![CDATA[ >= ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss')
			                                                    OR RECOVER_TIME <![CDATA[  >= ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss'))
			                                      GROUP BY TUNL_CD,
			                                               MTNOF_CD,
			                                               TUNL_NM,
			                                               MODL_NM,
			                                               RECOVER,
			                                               EVNT_NM,
			                                               TO_CHAR (EVENT_TIME, 'yyyymmdd'),
			                                               TO_CHAR (RECOVER_TIME, 'yyyymmdd')) a)
			                    GROUP BY fac_type,
			                             MTNOF_CD,
			                             TUNL_CD,
			                             TUNL_NM)
			          GROUP BY fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM
			          UNION ALL
			            SELECT fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM,
			                   SUM (today_trobl) today_trobl,
			                   SUM (today_recover) today_recover,
			                   SUM (pre_trobl) pre_trobl,
			                   SUM (pre_recover) pre_recover
			              FROM (  SELECT fac_type,
			                             2 AS fac_idx,
			                             MTNOF_CD,
			                             TO_CHAR (RTU_LAMPINFO_SEQ) AS FAC_CD,
			                             ELRM_FCLTS_NM AS FAC_NM,
			                             SUM (today_trobl) today_trobl,
			                             SUM (today_recover) today_recover,
			                             SUM (pre_trobl) pre_trobl,
			                             SUM (pre_recover) pre_recover
			                        FROM (SELECT '전기' AS fac_type,
			                                     RTU_LAMPINFO_SEQ,
			                                     MTNOF_CD,
			                                     ELRM_FCLTS_NM,
			                                     CASE
			                                        WHEN    (    ALARMTIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 'N')
			                                             OR (    ALARMTIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND ALMLASTDATE =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 'Y')
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_trobl,
			                                     CASE
			                                        WHEN     ALMLASTDATE =
			                                                    TO_CHAR (SYSDATE, 'yyyymmdd')
			                                             AND RECOVER = 'Y'
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_recover,
			                                     CASE
			                                        WHEN    (    ALARMTIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 'N')
			                                             OR (    ALARMTIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND ALMLASTDATE =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 'Y')
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_trobl,
			                                     CASE
			                                        WHEN     ALMLASTDATE =
			                                                    TO_CHAR (SYSDATE - 1,
			                                                             'yyyymmdd')
			                                             AND RECOVER = 'Y'
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_recover
			                                FROM (  SELECT RTU_LAMPINFO_SEQ,
			                                               MTNOF_CD,
			                                               ELRM_FCLTS_NM,
			                                               RETCODE AS recover,
			                                               TO_CHAR (ALARMTIME, 'yyyymmdd')
			                                                  AS ALARMTIME,
			                                               TO_CHAR (ALMLASTDATE, 'yyyymmdd')
			                                                  AS ALMLASTDATE,
			                                               COUNT (*) AS cnt
			                                          FROM IOC_SDTIC_ELCTY_FCLTS_EVENT
			                                         WHERE     1 = 1
			                                               AND (   ALARMTIME <![CDATA[ >= ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss')
			                                                    OR ALMLASTDATE <![CDATA[  >=  ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss'))
			                                      GROUP BY RTU_LAMPINFO_SEQ,
			                                               MTNOF_CD,
			                                               RETCODE,
			                                               ELRM_FCLTS_NM,
			                                               ALARMTIME,
			                                               ALMLASTDATE) a)
			                    GROUP BY fac_type,
			                             MTNOF_CD,
			                             RTU_LAMPINFO_SEQ,
			                             ELRM_FCLTS_NM)
			          GROUP BY fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM
			          UNION ALL
			            SELECT fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM,
			                   SUM (today_trobl) today_trobl,
			                   SUM (today_recover) today_recover,
			                   SUM (pre_trobl) pre_trobl,
			                   SUM (pre_recover) pre_recover
			              FROM (  SELECT fac_type,
			                             4 AS fac_idx,
			                             MTNOF_CD,
			                             TO_CHAR (SVAR_CD) AS FAC_CD,
			                             SVAR_NM AS FAC_NM,
			                             SUM (today_trobl) today_trobl,
			                             SUM (today_recover) today_recover,
			                             SUM (pre_trobl) pre_trobl,
			                             SUM (pre_recover) pre_recover
			                        FROM (SELECT '오수' AS fac_type,
			                                     SVAR_CD,
			                                     MTNOF_CD,
			                                     SVAR_NM,
			                                     CASE
			                                        WHEN    (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 0)
			                                             OR (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 2)
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_trobl,
			                                     CASE
			                                        WHEN     RECOVER_TIME =
			                                                    TO_CHAR (SYSDATE, 'yyyymmdd')
			                                             AND RECOVER = 2
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_recover,
			                                     CASE
			                                        WHEN    (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 0)
			                                             OR (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 2)
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_trobl,
			                                     CASE
			                                        WHEN     RECOVER_TIME =
			                                                    TO_CHAR (SYSDATE - 1,
			                                                             'yyyymmdd')
			                                             AND RECOVER = 2
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_recover
			                                FROM (  SELECT SVAR_CD,
			                                               MTNOF_CD,
			                                               SVAR_NM,
			                                               re AS recover,
			                                               TO_CHAR (EVENT_TIME, 'yyyymmdd')
			                                                  AS EVENT_TIME,
			                                               TO_CHAR (RECOVER_TIME, 'yyyymmdd')
			                                                  AS RECOVER_TIME,
			                                               COUNT (*) AS cnt
			                                          FROM IOC_SDTIC_PLTWTR_EVENT
			                                         WHERE     1 = 1
			                                               AND (   EVENT_TIME <![CDATA[  >=  ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss')
			                                                    OR RECOVER_TIME <![CDATA[ >=  ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss'))
			                                      GROUP BY MTNOF_CD,
			                                               SVAR_CD,
			                                               SVAR_NM,
			                                               re,
			                                               TO_CHAR (EVENT_TIME, 'yyyymmdd'),
                                               				TO_CHAR (RECOVER_TIME, 'yyyymmdd')) a)
			                    GROUP BY fac_type,
			                             MTNOF_CD,
			                             SVAR_CD,
			                             SVAR_NM)
			          GROUP BY fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM
			                   union all
			                         select fac_type, fac_idx, MTNOF_CD, to_char(FAC_CD) , FAC_NM, sum(today_trobl) today_trobl, sum(today_recover) today_recover, sum(pre_trobl) pre_trobl, sum(pre_recover) pre_recover
			                         from
			                         (
			                         /*사면조치없음??*/
			                         select fac_type, 3 as fac_idx, MSIS_GTWY_ID as FAC_CD, MTNOF_CD, FAC_NM, sum(today_trobl) today_trobl, 0 as today_recover, sum(pre_trobl) pre_trobl,  0 as pre_recover
			                         from(
			                                 select '사면' as fac_type, a.MSIS_GTWY_ID, b.MTNOF_CD, b.FAC_NM,
			                                 case when  a.LSTTM_ALTR_DTTM = to_char(sysdate,'yyyymmdd') and RECOVER <![CDATA[<> ]]>  '0' THEN cnt ELSE 0 END today_trobl,
			                                 case when  a.LSTTM_ALTR_DTTM = to_char(sysdate,'yyyymmdd') and RECOVER = '0' THEN cnt ELSE 0 END today_recover,
			                                 case when  a.LSTTM_ALTR_DTTM = to_char(sysdate-1,'yyyymmdd') and RECOVER <![CDATA[<> ]]>  '0' THEN cnt ELSE 0 END pre_trobl,
			                                 case when  a.LSTTM_ALTR_DTTM = to_char(sysdate-1,'yyyymmdd') and RECOVER = '0' THEN cnt ELSE 0 END pre_recover
			                                         from
			                                         (
			                                             select MSIS_GTWY_ID, MSIS_SNSR_ID, MSIS_NTFC_KIND_CD, USE_YN as recover , to_char(FSTTM_RGST_DTTM,'yyyymmdd') as FSTTM_RGST_DTTM , to_char(LSTTM_ALTR_DTTM,'yyyymmdd') as LSTTM_ALTR_DTTM, count(MSIS_SNSR_ID) as cnt
			                                             from IOC_SDTIC_SNSR_EVENT
			                                             where 1=1
			                                             and
			                                             (
			                                             FSTTM_RGST_DTTM  <![CDATA[  >=  ]]> to_date(to_char(sysdate-1, 'yyyymmdd')||'000000', 'yyyymmddhh24miss') or
			                                             LSTTM_ALTR_DTTM  <![CDATA[  >=  ]]> to_date(to_char(sysdate-1, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
			                                             )
			                                             group by MSIS_GTWY_ID, MSIS_SNSR_ID, MSIS_NTFC_KIND_CD, USE_YN, FSTTM_RGST_DTTM, LSTTM_ALTR_DTTM
			
			                                         ) a,
			                                         (select MSIS_GTWY_ID, MSIS_SNSR_ID, MTNOF_CD, USE_ROTNM ||' '||DRVE_DRNM||'방향 '||REGIN_NM as FAC_NM
			                                             from IOC_SDTIC_SNSR_TOT_MHRLS) b
			                                             where a.MSIS_GTWY_ID = b.MSIS_GTWY_ID
			                                             and a.MSIS_SNSR_ID = b.MSIS_SNSR_ID
			
			                                 )
			                                 group by fac_type, MSIS_GTWY_ID, MTNOF_CD, FAC_NM
			                         )
			                         group by fac_type, fac_idx, MTNOF_CD, FAC_CD , FAC_NM
			         ) a,
			         (SELECT MTNOF_CD, MTNOF_NM
			            FROM IOC_SDTIC_COMMON_DEPT
			           WHERE     1 = 1
			                 AND HDQR_CD = #bonbuCode#
			                 AND (    MTNOF_NM NOT LIKE '%기계%'
			                      AND MTNOF_NM NOT LIKE '%본부%'
			                      AND MTNOF_NM NOT LIKE '%관리%')) b
			   WHERE a.MTNOF_CD(+) = b.MTNOF_CD
			GROUP BY b.MTNOF_NM, b.MTNOF_CD
			ORDER BY b.MTNOF_CD
		     
    </select>
    
    <select id="FecMainmapDAO.fecPsctnTroblOccrrncManagtLv2" parameterClass="FecSearchVO"  resultClass="java.util.HashMap"> 
	    	SELECT   fac_type AS name,
			         fac_idx AS priority,
			         NVL (SUM (a.today_trobl), 0) AS trobl,
			         NVL (SUM (a.today_recover), 0) AS recover,
			         NVL (SUM (a.pre_trobl), 0) AS pre_trobl,
			         NVL (SUM (a.pre_recover), 0) AS pre_recover
			    FROM (SELECT TO_CHAR ('터널') AS fac_type,
			                 1 AS fac_idx,
			                 #deptCode# AS MTNOF_CD,
			                 TO_CHAR ('') FAC_CD,
			                 TO_CHAR ('') FAC_NM,
			                 0 AS today_trobl,
			                 0 AS today_recover,
			                 0 AS pre_trobl,
			                 0 AS pre_recover
			            FROM DUAL
			          UNION ALL
			          SELECT TO_CHAR ('전기') AS fac_type,
			                 2 AS fac_idx,
			                 #deptCode# AS MTNOF_CD,
			                 TO_CHAR ('') FAC_CD,
			                 TO_CHAR ('') FAC_NM,
			                 0 AS today_trobl,
			                 0 AS today_recover,
			                 0 AS pre_trobl,
			                 0 AS pre_recover
			            FROM DUAL
			          UNION ALL
			          SELECT TO_CHAR ('사면') AS fac_type,
			                 3 AS fac_idx,
			                 #deptCode# AS MTNOF_CD,
			                 TO_CHAR ('') FAC_CD,
			                 TO_CHAR ('') FAC_NM,
			                 0 AS today_trobl,
			                 0 AS today_recover,
			                 0 AS pre_trobl,
			                 0 AS pre_recover
			            FROM DUAL
			          UNION ALL
			          SELECT TO_CHAR ('오수') AS fac_type,
			                 4 AS fac_idx,
			                 #deptCode# AS MTNOF_CD,
			                 TO_CHAR ('') FAC_CD,
			                 TO_CHAR ('') FAC_NM,
			                 0 AS today_trobl,
			                 0 AS today_recover,
			                 0 AS pre_trobl,
			                 0 AS pre_recover
			            FROM DUAL
			          UNION ALL
			            SELECT fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM,
			                   SUM (today_trobl) today_trobl,
			                   SUM (today_recover) today_recover,
			                   SUM (pre_trobl) pre_trobl,
			                   SUM (pre_recover) pre_recover
			              FROM (  SELECT fac_type,
			                             1 AS fac_idx,
			                             MTNOF_CD,
			                             TO_CHAR (TUNL_CD) AS FAC_CD,
			                             TUNL_NM AS FAC_NM,
			                             SUM (today_trobl) today_trobl,
			                             SUM (today_recover) today_recover,
			                             SUM (pre_trobl) pre_trobl,
			                             SUM (pre_recover) pre_recover
			                        FROM (SELECT '터널' AS fac_type,
			                                     TUNL_CD,
			                                     MTNOF_CD,
			                                     TUNL_NM,
			                                     CASE
			                                        WHEN    (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 0)
			                                             OR (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 2)
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_trobl,
			                                     CASE
			                                        WHEN     RECOVER_TIME =
			                                                    TO_CHAR (SYSDATE, 'yyyymmdd')
			                                             AND RECOVER = 2
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_recover,
			                                     CASE
			                                        WHEN    (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 0)
			                                             OR (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 2)
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_trobl,
			                                     CASE
			                                        WHEN     RECOVER_TIME =
			                                                    TO_CHAR (SYSDATE - 1,
			                                                             'yyyymmdd')
			                                             AND RECOVER = 2
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_recover
			                                FROM (  SELECT TUNL_CD,
			                                               MTNOF_CD,
			                                               TUNL_NM,
			                                               RECOVER,
			                                               TO_CHAR (EVENT_TIME, 'yyyymmdd')
			                                                  AS EVENT_TIME,
			                                               TO_CHAR (RECOVER_TIME, 'yyyymmdd')
			                                                  AS RECOVER_TIME,
			                                               COUNT (*) AS cnt
			                                          FROM IOC_SDTIC_TUNNEL_EVENT
			                                         WHERE     1 = 1
			                                               AND EVENT_LEVEL <![CDATA[  >=  ]]> 0
			                                               AND (   EVENT_TIME  <![CDATA[ >=  ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss')
			                                                    OR RECOVER_TIME  <![CDATA[ >=  ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss'))
			                                      GROUP BY TUNL_CD,
			                                               MTNOF_CD,
			                                               TUNL_NM,
			                                               MODL_NM,
			                                               RECOVER,
			                                               EVNT_NM,
			                                               TO_CHAR (EVENT_TIME, 'yyyymmdd'),
			                                               TO_CHAR (RECOVER_TIME, 'yyyymmdd')) a)
			                    GROUP BY fac_type,
			                             MTNOF_CD,
			                             TUNL_CD,
			                             TUNL_NM)
			          GROUP BY fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM
			          UNION ALL
			            SELECT fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM,
			                   SUM (today_trobl) today_trobl,
			                   SUM (today_recover) today_recover,
			                   SUM (pre_trobl) pre_trobl,
			                   SUM (pre_recover) pre_recover
			              FROM (  SELECT fac_type,
			                             2 AS fac_idx,
			                             MTNOF_CD,
			                             TO_CHAR (RTU_LAMPINFO_SEQ) AS FAC_CD,
			                             ELRM_FCLTS_NM AS FAC_NM,
			                             SUM (today_trobl) today_trobl,
			                             SUM (today_recover) today_recover,
			                             SUM (pre_trobl) pre_trobl,
			                             SUM (pre_recover) pre_recover
			                        FROM (SELECT '전기' AS fac_type,
			                                     RTU_LAMPINFO_SEQ,
			                                     MTNOF_CD,
			                                     ELRM_FCLTS_NM,
			                                     CASE
			                                        WHEN    (    ALARMTIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 'N')
			                                             OR (    ALARMTIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND ALMLASTDATE =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 'Y')
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_trobl,
			                                     CASE
			                                        WHEN     ALMLASTDATE =
			                                                    TO_CHAR (SYSDATE, 'yyyymmdd')
			                                             AND RECOVER = 'Y'
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_recover,
			                                     CASE
			                                        WHEN    (    ALARMTIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 'N')
			                                             OR (    ALARMTIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND ALMLASTDATE =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 'Y')
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_trobl,
			                                     CASE
			                                        WHEN     ALMLASTDATE =
			                                                    TO_CHAR (SYSDATE - 1,
			                                                             'yyyymmdd')
			                                             AND RECOVER = 'Y'
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_recover
			                                FROM (  SELECT RTU_LAMPINFO_SEQ,
			                                               MTNOF_CD,
			                                               ELRM_FCLTS_NM,
			                                               RETCODE AS recover,
			                                               TO_CHAR (ALARMTIME, 'yyyymmdd')
			                                                  AS ALARMTIME,
			                                               TO_CHAR (ALMLASTDATE, 'yyyymmdd')
			                                                  AS ALMLASTDATE,
			                                               COUNT (*) AS cnt
			                                          FROM IOC_SDTIC_ELCTY_FCLTS_EVENT
			                                         WHERE     1 = 1
			                                               AND (   ALARMTIME  <![CDATA[ >= ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss')
			                                                    OR ALMLASTDATE  <![CDATA[  >= ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss'))
			                                      GROUP BY RTU_LAMPINFO_SEQ,
			                                               MTNOF_CD,
			                                               RETCODE,
			                                               ELRM_FCLTS_NM,
			                                               ALARMTIME,
			                                               ALMLASTDATE) a)
			                    GROUP BY fac_type,
			                             MTNOF_CD,
			                             RTU_LAMPINFO_SEQ,
			                             ELRM_FCLTS_NM)
			          GROUP BY fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM
			          UNION ALL
			            SELECT fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM,
			                   SUM (today_trobl) today_trobl,
			                   SUM (today_recover) today_recover,
			                   SUM (pre_trobl) pre_trobl,
			                   SUM (pre_recover) pre_recover
			              FROM (  SELECT fac_type,
			                             4 AS fac_idx,
			                             MTNOF_CD,
			                             TO_CHAR (SVAR_CD) AS FAC_CD,
			                             SVAR_NM AS FAC_NM,
			                             SUM (today_trobl) today_trobl,
			                             SUM (today_recover) today_recover,
			                             SUM (pre_trobl) pre_trobl,
			                             SUM (pre_recover) pre_recover
			                        FROM (SELECT '오수' AS fac_type,
			                                     SVAR_CD,
			                                     MTNOF_CD,
			                                     SVAR_NM,
			                                     CASE
			                                        WHEN    (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 0)
			                                             OR (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER_TIME =
			                                                        TO_CHAR (SYSDATE,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 2)
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_trobl,
			                                     CASE
			                                        WHEN     RECOVER_TIME =
			                                                    TO_CHAR (SYSDATE, 'yyyymmdd')
			                                             AND RECOVER = 2 
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        today_recover,
			                                     CASE
			                                        WHEN    (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 0)
			                                             OR (    EVENT_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER_TIME =
			                                                        TO_CHAR (SYSDATE - 1,
			                                                                 'yyyymmdd')
			                                                 AND RECOVER = 2)
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_trobl,
			                                     CASE
			                                        WHEN     RECOVER_TIME =
			                                                    TO_CHAR (SYSDATE - 1,
			                                                             'yyyymmdd')
			                                             AND RECOVER = 2
			                                        THEN
			                                           cnt
			                                        ELSE
			                                           0
			                                     END
			                                        pre_recover
			                                FROM (  SELECT SVAR_CD,
			                                               MTNOF_CD,
			                                               SVAR_NM,
			                                               re AS recover,
			                                               TO_CHAR (EVENT_TIME, 'yyyymmdd')
			                                                  AS EVENT_TIME,
			                                               TO_CHAR (RECOVER_TIME, 'yyyymmdd')
			                                                  AS RECOVER_TIME,
			                                               COUNT (*) AS cnt
			                                          FROM IOC_SDTIC_PLTWTR_EVENT
			                                         WHERE     1 = 1
			                                               AND (   EVENT_TIME <![CDATA[ >= ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss')
			                                                    OR RECOVER_TIME <![CDATA[ >= ]]>
			                                                          TO_DATE (
			                                                                TO_CHAR (SYSDATE - 1,
			                                                                         'yyyymmdd')
			                                                             || '000000',
			                                                             'yyyymmddhh24miss'))
			                                      GROUP BY MTNOF_CD,
			                                               SVAR_CD,
			                                               SVAR_NM,
			                                               re,
			                                               TO_CHAR (EVENT_TIME, 'yyyymmdd'),
			                                               TO_CHAR (RECOVER_TIME, 'yyyymmdd')) a)
			                    GROUP BY fac_type,
			                             MTNOF_CD,
			                             SVAR_CD,
			                             SVAR_NM)
			          GROUP BY fac_type,
			                   fac_idx,
			                   MTNOF_CD,
			                   FAC_CD,
			                   FAC_NM 
			                   union all
			                          select fac_type, fac_idx, MTNOF_CD, to_char(FAC_CD) , FAC_NM, sum(today_trobl) today_trobl, sum(today_recover) today_recover, sum(pre_trobl) pre_trobl, sum(pre_recover) pre_recover
			                          from
			                          (
			                          /*사면 조치없음???*/
			                          select fac_type, 3 as fac_idx, MSIS_GTWY_ID as FAC_CD, MTNOF_CD, FAC_NM, sum(today_trobl) today_trobl, 0 as today_recover, sum(pre_trobl) pre_trobl, 0 as pre_recover
			                          from(
			                                  select '사면' as fac_type, a.MSIS_GTWY_ID, b.MTNOF_CD, b.FAC_NM,
			                                  case when  a.LSTTM_ALTR_DTTM = to_char(sysdate,'yyyymmdd') and RECOVER <![CDATA[<> ]]> '0' THEN cnt ELSE 0 END today_trobl,
			                                  case when  a.LSTTM_ALTR_DTTM = to_char(sysdate,'yyyymmdd') and RECOVER = '0' THEN cnt ELSE 0 END today_recover,
			                                  case when  a.LSTTM_ALTR_DTTM = to_char(sysdate-1,'yyyymmdd') and RECOVER <![CDATA[<> ]]>'0' THEN cnt ELSE 0 END pre_trobl,
			                                  case when  a.LSTTM_ALTR_DTTM = to_char(sysdate-1,'yyyymmdd') and RECOVER = '0' THEN cnt ELSE 0 END pre_recover
			                                          from
			                                          (
			                                              select MSIS_GTWY_ID, MSIS_SNSR_ID, MSIS_NTFC_KIND_CD, USE_YN as recover , to_char(FSTTM_RGST_DTTM,'yyyymmdd') as FSTTM_RGST_DTTM , to_char(LSTTM_ALTR_DTTM,'yyyymmdd') as LSTTM_ALTR_DTTM, count(MSIS_SNSR_ID) as cnt
			                                              from IOC_SDTIC_SNSR_EVENT
			                                              where 1=1
			                                              and
			                                              (
			                                              FSTTM_RGST_DTTM  <![CDATA[>=   ]]>to_date(to_char(sysdate-1, 'yyyymmdd')||'000000', 'yyyymmddhh24miss') or
			                                              LSTTM_ALTR_DTTM <![CDATA[ >=   ]]>to_date(to_char(sysdate-1, 'yyyymmdd')||'000000', 'yyyymmddhh24miss')
			                                              )
			                                              group by MSIS_GTWY_ID, MSIS_SNSR_ID, MSIS_NTFC_KIND_CD, USE_YN, FSTTM_RGST_DTTM, LSTTM_ALTR_DTTM
			
			                                          ) a,
			                                          (select MSIS_GTWY_ID, MSIS_SNSR_ID, MTNOF_CD, USE_ROTNM ||' '||DRVE_DRNM||'방향 '||REGIN_NM as FAC_NM
			                                              from IOC_SDTIC_SNSR_TOT_MHRLS) b
			                                              where a.MSIS_GTWY_ID = b.MSIS_GTWY_ID
			                                              and a.MSIS_SNSR_ID = b.MSIS_SNSR_ID
			
			                                  )
			                                  group by fac_type, MSIS_GTWY_ID, MTNOF_CD, FAC_NM
			                          )
			                          group by fac_type, fac_idx, MTNOF_CD, FAC_CD , FAC_NM
			                         ) a,
			         IOC_SDTIC_COMMON_DEPT b
			   WHERE a.MTNOF_CD = b.MTNOF_CD AND a.MTNOF_CD = #deptCode#
			GROUP BY fac_type, fac_idx
			ORDER BY fac_idx 
    </select>
    
    <select id="FecSptMapVO.fecSptMapAjax" parameterClass="FecSearchVO" resultClass="FecSptMapVO">  
			/*터널*/
          SELECT 'tunnel' as name , HDQR_CD as deptCode, COUNT (MTNOF_CD) as CNT
            FROM (  SELECT b.HDQR_CD, a.tunl_cd, A.MTNOF_CD
                      FROM IOC_SDTIC_TUNNEL_TOT_MHRLS a, IOC_SDTIC_COMMON_DEPT b
                     WHERE a.MTNOF_CD = b.MTNOF_CD
                  GROUP BY b.HDQR_CD, a.tunl_cd, A.MTNOF_CD)
                  where HDQR_CD = #deptCode#
        GROUP BY HDQR_CD
        union all/*오수*/
          SELECT 'pltwtrProcess' as name, HDQR_CD as deptCode, COUNT (MTNOF_CD) as CNT
            FROM (  SELECT b.HDQR_CD, a.SVAR_CD, A.MTNOF_CD
                      FROM IOC_SDTIC_PLTWTR_TOT_MHRLS a, IOC_SDTIC_COMMON_DEPT b
                     WHERE a.MTNOF_CD = b.MTNOF_CD
                  GROUP BY b.HDQR_CD, a.SVAR_CD, A.MTNOF_CD)
                  where HDQR_CD = #deptCode#
        GROUP BY HDQR_CD
        union all/*사면*/
          SELECT 'slope' as name, HDQR_CD as deptCode, COUNT (MTNOF_CD) as CNT
            FROM (  SELECT HDQR_CD, MSIS_GTWY_ID, MTNOF_CD
                      FROM IOC_SDTIC_SNSR_TOT_MHRLS
                  GROUP BY HDQR_CD, MSIS_GTWY_ID, MTNOF_CD)
                  where HDQR_CD = #deptCode#
        GROUP BY HDQR_CD
        union all/*전기*/
          SELECT name, HDQR_CD as deptCode, SUM (MTNOF_CD) AS CNT 
            FROM (  SELECT 'elcty' AS name, HDQR_CD, COUNT (MTNOF_CD) AS MTNOF_CD
                      FROM (  SELECT b.HDQR_CD, a.ELRM_RTU_ID, A.MTNOF_CD
                                FROM IOC_SDTIC_ELCTY_FCLTS_TOT a, IOC_SDTIC_COMMON_DEPT b
                               WHERE a.MTNOF_CD = b.MTNOF_CD
                            GROUP BY b.HDQR_CD, a.ELRM_RTU_ID, A.MTNOF_CD)
                  GROUP BY HDQR_CD
                  UNION
                    SELECT 'elcty' AS name, HDQR_CD, COUNT (MTNOF_CD) AS MTNOF_CD
                      FROM (  SELECT b.HDQR_CD, a.DSTBX_LTTW_INFO_SEQ, A.MTNOF_CD
                                FROM IOC_SDTIC_LGHT_FCLTS_TOT a, IOC_SDTIC_COMMON_DEPT b
                               WHERE a.MTNOF_CD = b.MTNOF_CD
                            GROUP BY b.HDQR_CD, a.DSTBX_LTTW_INFO_SEQ, A.MTNOF_CD)
                  GROUP BY HDQR_CD)
                  where HDQR_CD = #deptCode#
        GROUP BY name, HDQR_CD
        union all
          SELECT 'cctv' as name, HDQR_CD as deptCode, COUNT (MTNOF_CD) as CNT
            FROM (  SELECT HDQR_CD, SPIN_INTG_ID, MTNOF_CD
                      FROM IOC_SDTIC_HIWAY_CCTV
                  GROUP BY HDQR_CD, SPIN_INTG_ID, MTNOF_CD)
                  where HDQR_CD = #deptCode#
        GROUP BY HDQR_CD
        order by deptCode, name
    </select>  
    
    
</sqlMap>